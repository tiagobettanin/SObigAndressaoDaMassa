-----------------------------------aula 2

Duas perpectivas em so (importante e tem nos slides)

Quanod surgiu o conceito de hardware e o softeare

time-sharing (semsação de paralelismo)

lidar com gargalo de pc coisas kasi lentos para mais rapitdas
estudar mecanismos motivaççao e interrupjçoes
ver mecanismos que exoneram a cpu de trabalho

estudar os modos da cpu


buffering faz a intermidiaç~ça entre caras com velocidades diferentes

caching fa os dados mais assessaveis em um lugar mais rapido

sistema operacinal com carinum monolitico ( oposto é microcarnium, pode ter problemas se segurança)
estrutura modular

API

-----------------------------------aula 4

proceso = programa em execução

codigo obejeto e codigo executavel (qual a diferença)



quem executa as nistruções são as treads, o porcesso é o conjjunto (expaso de endereçãmento, threads), processo é ativo esta em execução

procsso não precisa necessariamente em execução, pode estár em esprea(de algum dado etc), bloqueado. ele pode ser considerado em estado quando esta em execução

threads tem tipos

oq o loader faz


o mairo custo é para fazre a pilha de alocação (aqulea do rips qu etem invertida)]]

prempçao, são sistemas operacionais que são capazes de interroper um processo

-----------------------------------aula 5

so prenpitivos (capazes de interroper a execuçõa de um processo)

therads tem qual relação com os processos

time sharing (divide uma fatia de tempo para todos os processos e da uma impressão que estão todos sendo rodados ao memsmo tempo)

enquatno o processo não estã sendo executato o so salva algumas infos necessarias não todas (program counter, memorioa, dados estaticos presentes na memroai)

pCB, process control block

---Duas perguntas com relaçao
1-depis de uma chama exit,oq uma chamada exit faz?
Resposnta: mudar o expaço de endereçamento do proceosso para auilo que eu realgment quero executar, 

2-se eu der um wait no pai baseado no novo endereçamento vai funcionar?
Resposta:Vai


oq é o I/O

cpu osiosa é ruim, quanto mais imutavel possivel melhro


-----------------------------------aula 6

quando vc maximisa o tmepo da cpu vc maximisa a vasão e o tmpo de resposta

prenpitivo

o processo não volta do começo com multiprogramaçção por conta do contexto do processo(conjutno de infos que permite voltar de onde parou)


filas (estados de execução de um processo)

escalonadores de curto prazo, escolher o processo para executar(a escolha depende da politica de alocação de processo)

vai cair de fazer teste de mesa para politicas de escalonadores de prazo curto

sjf - menor trabalho é atendido primeiro

vai cair tabela de sjf apporixmaxion - fazer tabela depois simulaçõ

pi da tabela é o pi/ da formula
a tabel atem que completar os pi 1>, ele dá o pi0 e os teste
oq está em azul pe para descobrir



-----------------------------------aula 7

inanidade  = dar prioridade para uqem sstá mais tempo esperando

prioridade estatica, pode gerar inanição

Round robin , espera circular
fila fifo
se for não prenpitivo nao te um bom tempo medio de resposta


Processo	PI0 t0		PI1 t1		PI2 t2		PI3	
A		1   6		     4		     6
B		1   9		     4		     4
C		1   4		     4		     2

  A   B  C   C   D   C  D
|---|--|---|---|---|--|--|
0   3  5   8   11  14 16 18

FIFO 

TMR	(3 + 2 + 11 + 8)/4 = 24 / 4 = 6



TME ( 0 + 0 + 3 + 3) / 4 = 6 / 4 = 1,5

APPROXIMATION ARREDONDA

-----------------------------------aula 8

sockets - umam enaiera de comunicação ineterprocessos que usa as postar para se comunicar

vai ter pipes na prova
pipes é um metodo de comunicação tipo caixa de correio
    depoista a mensagem na caixa de correio e eeu leio a hora que eu quiser, uma comunicação indireta 

processo n~ao compartilha dados
    para isso eu precisso criar uma se~çao na memoria ram devemos criar algo para deixar a memoria compartilhada, 
    memoria compartilhada tem uma mescanismo de senha com tolkirn par os porcessos que tere essa senha possa assessar
    Dois mecanismo principais: 

